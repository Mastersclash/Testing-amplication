/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssetUpdateManyWithoutTournamentsInput } from "./AssetUpdateManyWithoutTournamentsInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { MapUpdateManyWithoutTournamentsInput } from "./MapUpdateManyWithoutTournamentsInput";
import { SessionUpdateManyWithoutTournamentsInput } from "./SessionUpdateManyWithoutTournamentsInput";
import { StreamerUpdateManyWithoutTournamentsInput } from "./StreamerUpdateManyWithoutTournamentsInput";
import { TeamUpdateManyWithoutTournamentsInput } from "./TeamUpdateManyWithoutTournamentsInput";
@InputType()
class TournamentUpdateInput {
  @ApiProperty({
    required: false,
    type: () => AssetUpdateManyWithoutTournamentsInput,
  })
  @ValidateNested()
  @Type(() => AssetUpdateManyWithoutTournamentsInput)
  @IsOptional()
  @Field(() => AssetUpdateManyWithoutTournamentsInput, {
    nullable: true,
  })
  assets?: AssetUpdateManyWithoutTournamentsInput;

  @ApiProperty({
    required: false,
    type: () => MapUpdateManyWithoutTournamentsInput,
  })
  @ValidateNested()
  @Type(() => MapUpdateManyWithoutTournamentsInput)
  @IsOptional()
  @Field(() => MapUpdateManyWithoutTournamentsInput, {
    nullable: true,
  })
  maps?: MapUpdateManyWithoutTournamentsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string;

  @ApiProperty({
    required: false,
    type: () => SessionUpdateManyWithoutTournamentsInput,
  })
  @ValidateNested()
  @Type(() => SessionUpdateManyWithoutTournamentsInput)
  @IsOptional()
  @Field(() => SessionUpdateManyWithoutTournamentsInput, {
    nullable: true,
  })
  sessions?: SessionUpdateManyWithoutTournamentsInput;

  @ApiProperty({
    required: false,
    type: () => StreamerUpdateManyWithoutTournamentsInput,
  })
  @ValidateNested()
  @Type(() => StreamerUpdateManyWithoutTournamentsInput)
  @IsOptional()
  @Field(() => StreamerUpdateManyWithoutTournamentsInput, {
    nullable: true,
  })
  streamers?: StreamerUpdateManyWithoutTournamentsInput;

  @ApiProperty({
    required: false,
    type: () => TeamUpdateManyWithoutTournamentsInput,
  })
  @ValidateNested()
  @Type(() => TeamUpdateManyWithoutTournamentsInput)
  @IsOptional()
  @Field(() => TeamUpdateManyWithoutTournamentsInput, {
    nullable: true,
  })
  teams?: TeamUpdateManyWithoutTournamentsInput;
}
export { TournamentUpdateInput };
