/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { AssetListRelationFilter } from "../../asset/base/AssetListRelationFilter";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringFilter } from "../../util/StringFilter";
import { MapListRelationFilter } from "../../map/base/MapListRelationFilter";
import { SessionListRelationFilter } from "../../session/base/SessionListRelationFilter";
import { StreamerListRelationFilter } from "../../streamer/base/StreamerListRelationFilter";
import { TeamListRelationFilter } from "../../team/base/TeamListRelationFilter";
@InputType()
class TournamentWhereInput {
  @ApiProperty({
    required: false,
    type: () => AssetListRelationFilter,
  })
  @ValidateNested()
  @Type(() => AssetListRelationFilter)
  @IsOptional()
  @Field(() => AssetListRelationFilter, {
    nullable: true,
  })
  assets?: AssetListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MapListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MapListRelationFilter)
  @IsOptional()
  @Field(() => MapListRelationFilter, {
    nullable: true,
  })
  maps?: MapListRelationFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  name?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => SessionListRelationFilter,
  })
  @ValidateNested()
  @Type(() => SessionListRelationFilter)
  @IsOptional()
  @Field(() => SessionListRelationFilter, {
    nullable: true,
  })
  sessions?: SessionListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => StreamerListRelationFilter,
  })
  @ValidateNested()
  @Type(() => StreamerListRelationFilter)
  @IsOptional()
  @Field(() => StreamerListRelationFilter, {
    nullable: true,
  })
  streamers?: StreamerListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TeamListRelationFilter,
  })
  @ValidateNested()
  @Type(() => TeamListRelationFilter)
  @IsOptional()
  @Field(() => TeamListRelationFilter, {
    nullable: true,
  })
  teams?: TeamListRelationFilter;
}
export { TournamentWhereInput };
